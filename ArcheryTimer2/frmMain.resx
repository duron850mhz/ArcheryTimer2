<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQIEAAQFBgAFBggACQkLAAkKDQAKDA4ADA0OAAsMEAAMDREADg8UAA4Q
        EwAOEBUAEBASABASFgAQExgAEhQYABQVGAAXGBoAGBgaABkaHQAbHB8AHR0eAB0eIQAgICIAIiIkACQk
        JQAnKCoAKCgpACkqLQAuLjEAMDAyADIzNAAzNDUANDU3ADY2OAA3ODkAOTk6AD09PwA+P0AAQkJFAEVF
        RwBGRkgAR0hJAEhISQBJSkwATU1OAE1OUABPUFEAUFBSAFRVVgBTVVgAWVlaAFtbXABbXF0AXV1eAGBh
        YgBjY2QAZWVmAGdnaABnaGkAaWlrAGpqbABycnIAdHV2AHd3eAB4eXsAe3t8AH59fgCBgYIAg4OEAIWF
        hQCHh4gAioqKAIuLjACMi4wAjIyNAJGRkgCUk5QAlZWWAJaWmACampoAmpqcAJ2dngCfn6AAoKGhAKWl
        pQCoqKkArKysAK+vsACxsrIAt7e4ALq5ugC9vLwAwcHBAMbGxwDKysoAzc3OANDQ0QDW1tYA2dnZAN3d
        3QDi4uIA4+PkAOPk5ADk5OQA6enpAO3t7QDv7/AA8fHxAPX19QD49/cA+fn5APz8/AAmLwAAQFAAAFpw
        AAB0kAAAjrAAAKnPAADC8AAA0f8RANj/MQDe/1EA4/9xAOn/kQDv/7EA9v/RAP///wAAAAAALyYAAFBB
        AABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/kcQD/6pEA//CxAP/20QD///8AAAAAAC8U
        AABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x
        5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR
        /wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx
        /wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR
        /wCMcf8AppH/AL+x/wDa0f8A////AHBwcG5ubW5tbm1tbW5tbm1ubW5tbm1ubW5tbm1ucHBwcHBjT0VF
        RUVFRUVFRUVFRUVFRUVFRUVFRUVGRUxgbn9wYzoTBgQEAwcEBQcEAgIEBQQCAgcFBAUEBAUFEC9fcHBS
        DQ0NDQ0NDQ0IByY3SFZYUUAyGAgLDQkODwkQEkFrbkoIDw8PDQ8OGTdbanB/cHBwf3BiTiUTCQ0PDQ4J
        MGZuSQkNDQ8NCCtXbHB/cH9wf3B/cH9wZEQWDQ0NDwgvZm5ICA0NDQ8uYW9wf3BwcH9wcHB/cHBwa08c
        DQ8OCC9obkoJDQ0HKmFwf3BwcH9wcHB/cHBwf3BwbE0YDg0JL2ZuSAgNDSdfcHBwf3BwcH9wcHB/cHBw
        f3BwcEsSDQkwaG5ICA4UT25wcH9wf3B/cH9wf3B/cH9wf3B/ZTIJCi5nbkoIDSxlcH9wcHB/cHBwcHBw
        cH9wcHBwcHBwWwkKLmduSQoITm9/cHB/cHBwf29pam5wcHB/cHBwf3BuHAgwaG5KDBlicHBwcHB/cHBu
        UxoTS21wcHBwcHBwf3BJBC5mbkgFI29wf3Bwf3B/cGkzDQsjX3B/cH9wcH9wf1YGLmhuSgQtcHBwcHBw
        cHBwaTELCx9ecHBwcH9wcHB/XBctZ25LBTZwcH9wcHB/cHBsOg4NLGRwcHB/cHB/cHBfHi9obksENXBw
        cHBwcH9wcG5MFws2bHBwcH9wcHB/cF8eLmZuSgQrf3B/cH9wcHBwf1kXCTt/cH9wf3Bwf3BwWxYtZm5I
        BiBtcHBwcHBwcHBwXRoPQHBwcHBwcHBwcHBVBC5obkkMFWFwf3BwcH9wcHBiJhZNcHBwcH9wcHBwcEIE
        MGhuSQkJSW9wcHBwcHBwcG00GFpwcHBwcHBwcH9sGAgvZm5ICA0kY39wf3B/cHB/cD4ZX39wf3B/cHB/
        blUNCDBobkoIDxNHbXBwcHBwcHBwVB1icH9wcHBwcHBhKQ0IL2huSggNDSJbcHBwf3Bwf3BiKGZwcHBw
        f3BwbUMQDQkvZm5ICQ0NCCNdcHBwcHBwf2s2aXBwcHB/cGpEEwsPCDBobkgIDg0NDCVcbH9/cHBwbEZs
        cHB/cHBmRxQNDQ4IL2ZuSgkNDw0OBSFLZnBwcHBwYXBwcHBuXTgNDQ8NDwgvZm5JCA8NDwsNDhMmTmNt
        cHBucHBqXTwcEA0NDg0NCjBocFQQDg0ODQ0ODQsEFys2Oj85MSMJCA0ODg0ODQ0SQmtwYz0WBwQDBAUD
        BAQFAgEAAgECBAUEAwUEBAQFEDBgcHBwZFBERERERURERURERERFRERFREREREVEREVMYW9wcHBwbm1t
        bW1tbW1tbW1tbW1tbW1tbW1tbW1tbW5wcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAKCw8ACwwPAAsMEAAMDhEADhAUABASFgASFBcAExQYABUWGQAbGx0AHR4fAB4e
        IQAjJCYAJycpACYoKwAoKSwAKywuAC4uMAAvMDEAMjI0ADU2OQA4OTsAODk8ADs8PgBBQkQASkpNAExM
        TgBOT1EAUFFSAFJSVABXV1oAWVlbAF1eYABgYWMAamtsAG1tbgBycnMAdXV2AHZ3eAB/gIEAhISFAIqL
        jACRkZIAmJmaAKampgCura4Ar6+wALu7vAC7vLwAvLy9AMHBwQDHx8gAy8zMAM3NzQDU1NUA2dnZANvb
        3ADc3NwA4+PjAOfn5wDp6ekA7u7uAPHx8QD29vYA+vn5APz7+wD8/PwAAHAiAACQLAAAsDYAAM9AAADw
        SgAR/1sAMf9xAFH/hwBx/50Akf+yALH/yQDR/98A////AAAAAAACLwAABFAAAAZwAAAIkAAACrAAAAvP
        AAAO8AAAIP8SAD3/MQBb/1EAef9xAJj/kQC1/7EA1P/RAP///wAAAAAAFC8AACJQAAAwcAAAPZAAAEyw
        AABZzwAAZ/AAAHj/EQCK/zEAnP9RAK7/cQDA/5EA0v+xAOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQ
        AACOsAAAqc8AAMLwAADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBb
        AACQdAAAsI4AAM+pAADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAi
        AABwMAAAkD4AALBNAADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8D
        AABQBAAAcAYAAJAJAACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAA
        AAAvAA4AUAAXAHAAIQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP//
        /wAAAAAALwAgAFAANgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R
        8AD///8AAAAAACwALwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx
        /wD70f8A////AAAAAAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R
        /wDcsf8A69H/AP///wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx
        /wCmkf8Av7H/ANrR/wD///8AQjcxMTExMTExMTExMTE2QTkPAwMDAhAcHhQFAwMDDDQyBAUFGTJAQkJC
        NyMHBQUrMgQEID5PQkJPQk9AKggFKzIEGD1CQk9CQkJCQkImBCsyBC5CT0JPPz9PQkJPPAgrMgs+QkJC
        PxoXPU9CQkIdKzISQk9CQj8UDjtPQkJCJisyEkJCT0JBIRZAQkJPQiUrMgk9T0JPQiccQk9CT0IaKzIE
        LEJCQkIuJEJCQkI6BysyBBY8T0JPOClCQkJBIgQrMgQFHTxCQj8uQkI/KAYFKzIEBgQXLT5CPkAzHwUF
        BCs5EAMDAwALExUNAgMDAww1QjgvLzAwLy8wMC8vMDA2QQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>